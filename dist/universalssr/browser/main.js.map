{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AACuD;;;AAEvD,MAAMC,MAAM,GAAW,CAAC;EAAEC,IAAI,EAAE,EAAE;EAAEC,YAAY,EAAE,MAAM,4KAAsC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,eAAe;AAAC,CAAE,CAAC;AAMxH,MAAOC,gBAAgB;AAAhBA,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA;AAAgB;AAAhBA,gBAAgB;YAHjBP,iEAAoB,CAACC,MAAM,CAAC,EAC5BD,yDAAY;AAAA;;sHAEXO,gBAAgB;IAAAE,UAAAA,yDAAAA;IAAAC,UAFjBV,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACGlB,MAAOW,YAAY;EACvB;EAEAC,YACUC,MAAc,EACdC,cAA8B,EAC9BC,KAAY,EACZC,IAAU;IAHV,WAAM,GAANH,MAAM;IACN,mBAAc,GAAdC,cAAc;IACd,UAAK,GAALC,KAAK;IACL,SAAI,GAAJC,IAAI;EACV;EACJC,QAAQ;IAEN;IACA;IACA;IACA;IAEA;IAEA;IACA;IACA;IAEA;IAEA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;;AAhCSN,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAO;EAAAC;EAAAC;EAAAC;IAAA;MCVzBC,uDAAAA,oBAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;ACC2B;AACqB;AACxB;AAEC;AACT;AACS;;;AAiBlD,MAAOI,SAAS;AAATA,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;QAATA,SAAS;EAAAC,YAFRhB,wDAAY;AAAA;AAEbe,SAAS;YAVlBH,yFAAkC,CAAC;IAAEM,KAAK,EAAE;EAAe,CAAE,CAAC,EAC9DtB,iEAAgB,EAChBkB,kEAAgB,EAChBzB,yDAAY,EACZwB,yFAAuB;AAAA;;sHAMdE,SAAS;IAAAI,eAblBnB,wDAAY;IAAAF,UAAAA,oEAAAA,EAIZF,iEAAgB,EAChBkB,kEAAgB,EAChBzB,yDAAY,EACZwB,yFAAuB;EAAA;AAAA;;;;;;;;;;;;;;AChBkB;AAG7C,SAASG,SAAS;EACdI,sEAAAA,EAAwB,CAACC,eAAe,CAACN,sDAAS,CAAC,CACpDO,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;AACjC;AAAC;AAGF,IAAIG,QAAQ,CAACC,UAAU,KAAK,UAAU,EAAE;EACtCX,SAAS,EAAE;CACZ,MAAM;EACLU,QAAQ,CAACE,gBAAgB,CAAC,kBAAkB,EAAEZ,SAAS,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [{ path: '', loadChildren: () => import('./universal/universal.module').then(m => m.UniversalModule) }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Title, Meta } from '@angular/platform-browser';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  // title = 'universalssr';\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private title: Title,\n    private meta: Meta\n  ) { }\n  ngOnInit(): void {\n\n    // this.router.events.pipe(\n    //   filter(event => event instanceof NavigationEnd),\n    // )\n    //   .subscribe(() => {\n\n    //     var rt = this.getChild(this.activatedRoute)\n\n    //     rt.data.subscribe((data: any) => {\n    //       console.log(data);\n    //       this.title.setTitle(data.title)\n\n    //     });\n\n    //   });\n\n    // }\n    // getChild(activatedRoute: ActivatedRoute): any {\n    //   if (activatedRoute.firstChild) {\n    //     return this.getChild(activatedRoute.firstChild);\n    //   } else {\n    //     return activatedRoute;\n    //   }\n\n  }\n}","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'universal-ssr' }),\n    AppRoutingModule,\n    HttpClientModule,\n    RouterModule,\n    BrowserAnimationsModule,\n     \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nfunction bootstrap() {\n    platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n  };\n\n\n if (document.readyState === 'complete') {\n   bootstrap();\n } else {\n   document.addEventListener('DOMContentLoaded', bootstrap);\n }\n \n"],"names":["RouterModule","routes","path","loadChildren","then","m","UniversalModule","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","router","activatedRoute","title","meta","ngOnInit","selectors","decls","vars","template","i0","BrowserModule","BrowserAnimationsModule","HttpClientModule","AppModule","bootstrap","withServerTransition","appId","declarations","__NgCli_bootstrap_1","bootstrapModule","catch","err","console","error","document","readyState","addEventListener"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}